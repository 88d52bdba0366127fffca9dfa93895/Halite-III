language: cpp

matrix:
  include:
    - os: osx
      osx_image: xcode9.4
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    - os: linux
      services: docker
      sudo: true
      dist: trusty
      env: COMPILER="g++-7 gcc-7" CCOMPILE=gcc-7 CXXCOMPILE=g++-7
    - os: linux
      services: docker
      sudo: true
      dist: trusty
      env: COMPILER="clang-5.0" CCOMPILE=clang-5.0 CXXCOMPILE=clang++-5.0
    - os: linux
      services: docker
      sudo: true
      dist: trusty
      env: COMPILER="clang-6.0" CCOMPILE=clang-6.0 CXXCOMPILE=clang++-6.0

before_install: ./.travis.before_install.sh
script: ./travis.script.sh
jobs:
  include:
    - stage: test starter kits
      name: "Java starter kit"
      script:
        - cd ./airesources/Java
        - javac MyBot.java
      env: []
    - script:
        - cd ./airesources/Python3
        - python3 -m py_compile MyBot.py
      name: "Python starter kit"
      env: []
    - script:
        - docker exec build /bin/bash -c "cd /project/airesources/C++; CC=$CCOMPILE CXX=$CXXCOMPILE make MyBot"
      name: "C++ starter kit"
    - stage: build website
      env: []
      script:
        - cd ./website
        - npm config set package-lock false
        - gem install bundler
        - bundle install --path=vendor/bundle
        - npm install
        - cd ../libhaliteviz
        - npm install
        - cd ../website
        - npm run build
        - bundle exec jekyll build
